
RSCRIPT := Rscript

TARGET := bin/calc_sample_var
SRCDIR := src
FLAGS = -std=c++11 -Wno-deprecated $(LIBS) $(INCLUDES)

HEADERS := parse_arguments.hpp data.hpp class.h bgen_parser.hpp
HEADERS := $(addprefix $(SRCDIR)/,$(HEADERS))
#
# rescomp: CXX = /apps/well/gcc/7.2.0/bin/g++
# rescomp: FLAGS += -O3 -lbgen -ldb -lsqlite3 -lboost -lz -ldl -lrt -lpthread -lzstd
# rescomp: $(TARGET)
#
# rescomp-debug: CXX = /apps/well/gcc/7.2.0/bin/g++
# rescomp-debug: FLAGS += -g3 -lbgen -ldb -lsqlite3 -lboost -lz -ldl -lrt -lpthread -lzstd
# rescomp-debug: $(TARGET)
#
# garganey: CXX = g++
# garganey: FLAGS += -g3 -lbgen -ldb -lsqlite3 -lboost -lz -ldl -lrt -lpthread -lzstd
# garganey: $(TARGET)

# Cutting out -lrt, -lz

laptop: BGEN=/Users/kerin/software/bgen/
laptop: LDFLAGS += -L/usr/local/opt/llvm/lib
laptop: CPPFLAGS += -I/usr/local/opt/llvm/include
laptop: CXX = g++
laptop: LD_LIBRARY_PATH = $(ls -d /usr/local/Cellar/gcc/* | tail -n1)/lib
laptop: LIBS += -L/usr/local/Cellar/boost@1.55/1.55.0_1
laptop: INCLUDES += -I/usr/local/Cellar/boost@1.55/1.55.0_1
laptop: FLAGS += -g3
laptop: $(TARGET)

LIBS += -L$(BGEN)build/ -L$(BGEN)build/3rd_party/zstd-1.1.0 -L$(BGEN)build/db \
       -L$(BGEN)build/3rd_party/sqlite3 -L$(BGEN)build/3rd_party/boost_1_55_0 \
       -lbgen -ldb -lsqlite3 -lboost -lz -ldl -lpthread -lzstd -lboost_iostreams

INCLUDES += -I$(BGEN)genfile/include/ -I$(BGEN)3rd_party/zstd-1.1.0/lib/ \
           -I$(BGEN)db/include/ -I$(BGEN)3rd_party/sqlite3 -I$(BGEN)3rd_party/boost_1_55_0
# FLAGS += $(LIBS) $(INCLUDES)

$(TARGET): $(SRCDIR)/calc_sample_var.cpp $(HEADERS)
	$(info $$CXX is [${CXX}])
	$(info $$CFLAGS is [${CFLAGS}])
	$(info $$LDFLAGS is [${LDFLAGS}])
	$(CXX) -o $@ $< $(FLAGS)

# Clean dir
cleanIO:
	rm $(IOfiles)

clean:
	rm $(TARGET)
	rm $(IOfiles)
